
buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:7.0.0"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"

        // classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
        // classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

version "1.0.4"
group "com.neilab.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
//apply plugin: "asset-pipeline"
/*
ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
} */

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

/*
dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
} */

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"
   // compile group: 'org.grails', name: 'grails-datastore-gorm-hibernate5', version: '7.0.1.RELEASE'

  //  compile "org.grails.plugins:hibernate5:7.0.0"

   // compile "org.hibernate:hibernate-core:5.4.0.Final" //TODO: REMOVE?
 //   testCompile "org.grails:grails-plugin-testing"

  //  compile 'com.bertramlabs.plugins:karman-grails:1.1.5'
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.4.0.Final"

     compile 'com.bertramlabs.plugins:karman-core:0.9.21'
    compile 'com.bertramlabs.plugins:karman-grails:1.3.0' // grails 4
    compile group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3'
}

bootRun {
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
    //   jvmArgs = ['-Dspring.output.ansi.enabled=always']
}
bootJar.enabled = false
grailsPublish {
   // githubSlug = 'foo/bar'
  //  userOrg = 'NEiLAB, LLC'
    vcsUrl = "https://github.com/neilabdev/remora"
    issueTrackerUrl = "https://github.com/neilabdev/remora/issues"

    license {
        name = 'Apache-2.0'
    }
    title = "$project.name"
    desc = "Remora is a Grails Image / File Upload Plugin formally based on the excellent Selfie plugin. Use Remora to attach files to your domain models, upload to a CDN, validate content, produce thumbnails."
    developers = [jwhitfield: "James Whitfield"]
    websiteUrl = "https://github.com/neilabdev/remora"
}

/*
assets {
    packagePlugin = true
} */

jar {
    exclude "com/neilab/plugins/remora/test/**/**"
}
